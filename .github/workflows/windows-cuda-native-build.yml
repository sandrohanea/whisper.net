name: Windows Cuda native build

permissions:
    contents: read

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      BuildConfig:
        required: true
        type: string
        default: 'Release'

jobs:
  native-build:
    name: Windows CUDA ${{ matrix.cuda_label }}
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        include:
          - cuda_label: cuda13
            cuda_version: "13.0.0"
            package_dir: "runtimes/Whisper.net.Runtime.Cuda.Windows"
            artifact_name: windows-cuda-build
          - cuda_label: cuda12
            cuda_version: "12.4.0"
            package_dir: "runtimes/Whisper.net.Runtime.Cuda12.Windows"
            artifact_name: windows-cuda12-build

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@6fb02220983dee41ce7ae257b6f4d8f9bf5ed4ce

      - name: Install OpenCl with vcpkg
        run: |
          vcpkg --triplet=x64-windows install opencl

      - name: Install CUDA Toolkit (${{ matrix.cuda_version }})
        uses: Jimver/cuda-toolkit@8022558310ea543e35132143092835585f60e628
        with:
          cuda: ${{ matrix.cuda_version }}

      - name: Build Windows CUDA ${{ matrix.cuda_label }} runtime
        run: |
          $ErrorActionPreference = "Stop"
          Import-Module ./windows-scripts.ps1
          BuildWindows -Arch "x64" -Cuda $true -Configuration ${{ inputs.BuildConfig }}
        shell: pwsh

      - name: Stage Windows CUDA ${{ matrix.cuda_label }} runtime
        if: matrix.package_dir != 'runtimes/Whisper.net.Runtime.Cuda.Windows'
        run: |
          $ErrorActionPreference = "Stop"
          if (Test-Path "${{ matrix.package_dir }}/win-x64") {
            Remove-Item "${{ matrix.package_dir }}/win-x64" -Recurse -Force
          }
          New-Item -ItemType Directory -Force -Path "${{ matrix.package_dir }}" | Out-Null
          Move-Item "runtimes/Whisper.net.Runtime.Cuda.Windows/win-x64" \
            "${{ matrix.package_dir }}/win-x64" -Force
        shell: pwsh

      - name: Remove CUDA installer (${{ matrix.cuda_version }})
        run: Remove-Item -Path 'cuda_installer-*' -Recurse -Force -ErrorAction Ignore

      - name: Upload Windows CUDA ${{ matrix.cuda_label }} build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: "runtimes/Whisper.net.Run*/win-*/*"
          retention-days: 7
